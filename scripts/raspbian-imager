#!/usr/bin/env python

# Copyright (c) 2013 Sven Over <sven@svenover.de>
# Licensed under the MIT license, see the LICENSE file for details

import errno
import optparse
import os
import shutil
import subprocess
import sys

def main():
    parser = optparse.OptionParser()
    parser.add_option('-c', '--continue',
                      dest='continue_',
                      action='store_true',
                      help='resume action',
                      )
    parser.add_option("--distribution",
                      dest="distribution",
                      metavar='DIST',
                      default='wheezy',
                      help="distribution to install",
                      )
    parser.add_option("--source",
                      dest="source",
                      metavar='URL',
                      default='http://archive.raspbian.org/raspbian/',
                      help='raspbian source URL',
                      )
    parser.add_option("--debootstrap-source",
                      dest="debootstrap_source",
                      metavar='URL',
                      default=None,
                      help='raspbian source URL for debootstrap stage',
                      )
    parser.add_option('--add-package',
                      dest='add_packages',
                      metavar='PACKAGENAME',
                      action='append',
                      help='additional package to install',
                      )
    parser.add_option('--kernel-package',
                      dest='kernel_package',
                      metavar='PACKAGENAME',
                      default='linux-image-3.2.0-4-rpi',
                      help='kernel package',
                      )
    options, args = parser.parse_args()

    if args:
        parser.print_usage()
        raise SystemExit(1)

    continue_ = bool(options.continue_)

    if os.path.exists('rootfs'):
        if not continue_:
            raise SystemExit('rootfs directory does already exist')
    else:
        packages = set((options.kernel_package, 'aufs-tools'))
        if options.add_packages:
            packages.update(options.add_packages)
        args = ['qemu-debootstrap',
            '--arch', 'armhf',
            '--no-check-gpg', '--variant=minbase',
            '--include={0}'.format(','.join(sorted(packages))),
            options.distribution, 'rootfs', options.source,
            ]
        assert subprocess.call(args) == 0

    open('rootfs/etc/fstab', 'w').write(
        '/dev/mmcblk0p2 /boot vfat defaults 0 1\n'
        )
    open('rootfs/etc/initramfs-tools/modules', 'w').write(
        'aufs\nsquashfs\n'
        )
    open('rootfs/etc/apt/sources.list', 'w').write(
        'deb {0} {1} main contrib non-free\n'.format(options.source, options.distribution)
        )
    assert subprocess.call(['/usr/sbin/chroot', 'rootfs', 'usermod', '-p', '', 'root']) == 0

    try:
        os.mkdir('boot')
    except OSError as ex:
        if ex.errno != errno.EEXIST:
            raise
        if not options.continue_:
            raise SystemExit('boot directory does already exist')

    for filename in ('bootcode.bin', 'start.elf'):
        if not os.path.isfile(os.path.join('boot', filename)):
            assert 0 == subprocess.call(['wget', '-O', filename, 'https://github.com/raspberrypi/firmware/raw/master/boot/' + filename], cwd='boot')

    assert subprocess.call(['/usr/sbin/chroot', 'rootfs', '/usr/sbin/update-initramfs', '-u']) == 0

    for i in os.listdir('rootfs/boot'):
        shutil.move(os.path.join('rootfs/boot', i), 'boot')

if __name__ == '__main__':
    main()
